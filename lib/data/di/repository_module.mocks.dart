// Mocks generated by Mockito 5.3.2 from annotations
// in sejun2_flutter_tdd/data/di/repository_module.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sejun2_flutter_tdd/data/entities/entity.dart' as _i2;
import 'package:sejun2_flutter_tdd/domain/models/model.dart' as _i7;
import 'package:sejun2_flutter_tdd/domain/models/token.dart' as _i5;
import 'package:sejun2_flutter_tdd/domain/repositories/authenticate_repository.dart'
    as _i3;
import 'package:sejun2_flutter_tdd/domain/repositories/list_repository.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, E> extends _i1.SmartFake implements _i2.Result<T, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthenticateRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticateRepository extends _i1.Mock
    implements _i3.AuthenticateRepository {
  @override
  _i4.Future<_i2.Result<_i5.Token, String>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.Token, String>>.value(
            _FakeResult_0<_i5.Token, String>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i5.Token, String>>.value(
                _FakeResult_0<_i5.Token, String>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Token, String>>);
}

/// A class which mocks [ListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockListRepository extends _i1.Mock implements _i6.ListRepository {
  @override
  _i4.Future<_i2.Result<List<_i7.User>, String>> fetchUsers(
          {required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUsers,
          [],
          {#page: page},
        ),
        returnValue: _i4.Future<_i2.Result<List<_i7.User>, String>>.value(
            _FakeResult_0<List<_i7.User>, String>(
          this,
          Invocation.method(
            #fetchUsers,
            [],
            {#page: page},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<List<_i7.User>, String>>.value(
                _FakeResult_0<List<_i7.User>, String>(
          this,
          Invocation.method(
            #fetchUsers,
            [],
            {#page: page},
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i7.User>, String>>);
}
